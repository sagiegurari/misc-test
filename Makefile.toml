
[tasks.test-publish]
env = { "CARGO_MAKE_PROJECT_VERSION" = "1.6.6" }
run_task = "github-publish-custom-name"


[tasks.setup-release-build-env]
description = "Sets up any non-rust dependencies in the build environment"
category = "CI"
dependencies = ["install-zip", "setup-musl"]
clear = true #no need


[tasks.install-zip]
description = "Installs zip executable"
category = "Tools"
condition = { platforms = ["linux"] }
dependencies = ["setup-sudo-env"]
install_script = '''
which zip || (${CARGO_MAKE_SUDO_COMMAND} apt-get update && ${CARGO_MAKE_SUDO_COMMAND} apt-get install -y zip)
'''

[tasks.setup-musl]
description = "Sets up a musl build environment"
category = "CI"
condition = { env_set = [
   "CARGO_MAKE_RELEASE_FLOW_TARGET",
 "CARGO_MAKE_OPENSSL_VERSION",
 "CARGO_MAKE_OPENSSL_DOWNLOAD_URL",
], env_true = ["CARGO_MAKE_CI"], platforms = ["linux"] }
env.OPENSSL_DIR = "${HOME}/openssl-musl"
env.OPENSSL_PLATFORM = { source = "${CARGO_MAKE_RUST_TARGET_ARCH}", default_value = "x86_64", mapping = { "arm" = "armv4" } }
script = '''
rustup target add "$CARGO_MAKE_RELEASE_FLOW_TARGET"
curl ${CARGO_MAKE_OPENSSL_DOWNLOAD_URL} | tar xzf -
cd openssl-${CARGO_MAKE_OPENSSL_VERSION}
CC=musl-gcc ./Configure --prefix="$OPENSSL_DIR" no-dso no-ssl2 no-ssl3 linux-${OPENSSL_PLATFORM} -fPIC
make -j"$(nproc)"
make install
'''

[tasks.setup-sudo-env]
description = "Sets the sudo enable/disable environment variables."
category = "Tools"
script = '''
#!@duckscript
enable_sudo = not is_defined CARGO_MAKE_SUDO_DISABLE

# always allow sudo in CI
if equals ${CARGO_MAKE_CI} true
  enable_sudo = set true
end

fn is_ci_requires_sudo
 if equals "${CARGO_MAKE_CI_VENDOR}" Drone
  return false
  end
  
 # for all other vendors or in case we are not running inside a CI environment
  return true
 end

set_env CARGO_MAKE_SUDO_ENABLED ${enable_sudo}
set_env CARGO_MAKE_SUDO_COMMAND ""
if equals ${enable_sudo} true
  if is_ci_requires_sudo
   set_env CARGO_MAKE_SUDO_COMMAND sudo
    end
 end

 echo sudo enabled: ${enable_sudo}
'''

